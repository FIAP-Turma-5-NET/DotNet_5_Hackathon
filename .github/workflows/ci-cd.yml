# Nome do workflow que aparecerá no GitHub Actions
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.100'
  PROJECT_PATH: 'src/FIAP.HealthMed.API/FIAP.HealthMed.API.csproj'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: warning starting
      run: echo "Iniciando jobs!"

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coverage
        retention-days: 7

    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./publish
        retention-days: 7

    - name: warning finishing
      run: echo "Finalizando jobs!"

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: warning starting
      run: echo "Iniciando deploy para produção!"

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./publish

    - name: Deploy to production via SSH (Tailscale)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem

        ssh -i key.pem -o StrictHostKeyChecking=no rodrigo@100.107.244.124 powershell -Command "
          cd 'C:\\Users\\rodri\\source\\repos\\FIAP-Turma-5-NET\\DotNet_5_Hackathon';
          git pull origin main;
          docker-compose down;
          docker-compose up --build -d;
        "

    - name: warning finishing
      run: echo "Finalizando deploy para produção!"
